;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit LifeGameFram : 
  module SPIMaster : 
    input clock : Clock
    input reset : Reset
    output io : {spi : {flip miso : UInt<1>, mosi : UInt<1>, cs : UInt<1>, sck : UInt<1>}, flip tx : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, rx : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, flip cs : UInt<1>}
    
    reg shiftReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[spi_master.scala 27:27]
    reg misoReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[spi_master.scala 28:26]
    reg rxData : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[spi_master.scala 29:25]
    reg rxValid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[spi_master.scala 30:26]
    reg running : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[spi_master.scala 31:26]
    reg bitCounter : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[spi_master.scala 33:29]
    reg sck : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[spi_master.scala 34:22]
    reg cs : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[spi_master.scala 35:21]
    reg csDelay : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[spi_master.scala 36:26]
    reg dividerCounter : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[spi_master.scala 37:33]
    node _T = and(rxValid, io.rx.ready) @[spi_master.scala 39:19]
    when _T : @[spi_master.scala 39:36]
      rxValid <= UInt<1>("h00") @[spi_master.scala 40:17]
      skip @[spi_master.scala 39:36]
    io.tx.ready <= UInt<1>("h00") @[spi_master.scala 44:17]
    node _T_1 = eq(running, UInt<1>("h00")) @[spi_master.scala 46:10]
    node _T_2 = and(_T_1, io.tx.valid) @[spi_master.scala 46:19]
    node _T_3 = eq(rxValid, UInt<1>("h00")) @[spi_master.scala 46:38]
    node _T_4 = or(_T_3, io.rx.ready) @[spi_master.scala 46:47]
    node _T_5 = and(_T_2, _T_4) @[spi_master.scala 46:34]
    node _T_6 = eq(io.cs, UInt<1>("h00")) @[spi_master.scala 46:66]
    node _T_7 = and(_T_5, _T_6) @[spi_master.scala 46:63]
    when _T_7 : @[spi_master.scala 46:80]
      io.tx.ready <= UInt<1>("h01") @[spi_master.scala 47:21]
      shiftReg <= io.tx.bits @[spi_master.scala 48:18]
      bitCounter <= UInt<8>("h080") @[spi_master.scala 49:20]
      running <= UInt<1>("h01") @[spi_master.scala 50:17]
      csDelay <= cs @[spi_master.scala 51:17]
      cs <= UInt<1>("h00") @[spi_master.scala 52:12]
      skip @[spi_master.scala 46:80]
    else : @[spi_master.scala 53:39]
      node _T_8 = and(running, csDelay) @[spi_master.scala 53:26]
      when _T_8 : @[spi_master.scala 53:39]
        node _T_9 = lt(dividerCounter, UInt<1>("h01")) @[spi_master.scala 54:29]
        when _T_9 : @[spi_master.scala 54:51]
          node _dividerCounter_T = add(dividerCounter, UInt<1>("h01")) @[spi_master.scala 55:46]
          node _dividerCounter_T_1 = tail(_dividerCounter_T, 1) @[spi_master.scala 55:46]
          dividerCounter <= _dividerCounter_T_1 @[spi_master.scala 55:28]
          skip @[spi_master.scala 54:51]
        else : @[spi_master.scala 56:22]
          csDelay <= UInt<1>("h00") @[spi_master.scala 57:21]
          dividerCounter <= UInt<1>("h00") @[spi_master.scala 58:28]
          skip @[spi_master.scala 56:22]
        skip @[spi_master.scala 53:39]
      else : @[spi_master.scala 60:34]
        node _T_10 = eq(cs, UInt<1>("h00")) @[spi_master.scala 60:29]
        node _T_11 = and(running, _T_10) @[spi_master.scala 60:26]
        when _T_11 : @[spi_master.scala 60:34]
          node _T_12 = eq(dividerCounter, UInt<1>("h00")) @[spi_master.scala 61:29]
          when _T_12 : @[spi_master.scala 61:38]
            node _sck_T = eq(sck, UInt<1>("h00")) @[spi_master.scala 62:20]
            sck <= _sck_T @[spi_master.scala 62:17]
            when sck : @[spi_master.scala 63:25]
              node nextShiftReg_hi = bits(shiftReg, 6, 0) @[spi_master.scala 64:48]
              node nextShiftReg = cat(nextShiftReg_hi, misoReg) @[Cat.scala 30:58]
              node _T_13 = bits(bitCounter, 0, 0) @[spi_master.scala 65:32]
              when _T_13 : @[spi_master.scala 65:37]
                rxData <= nextShiftReg @[spi_master.scala 66:28]
                rxValid <= UInt<1>("h01") @[spi_master.scala 67:29]
                running <= UInt<1>("h00") @[spi_master.scala 68:29]
                node _cs_T = eq(io.tx.valid, UInt<1>("h00")) @[spi_master.scala 69:27]
                cs <= _cs_T @[spi_master.scala 69:24]
                skip @[spi_master.scala 65:37]
              shiftReg <= nextShiftReg @[spi_master.scala 71:26]
              node _bitCounter_T = dshr(bitCounter, UInt<1>("h01")) @[spi_master.scala 72:42]
              bitCounter <= _bitCounter_T @[spi_master.scala 72:28]
              skip @[spi_master.scala 63:25]
            else : @[spi_master.scala 73:26]
              misoReg <= io.spi.miso @[spi_master.scala 74:25]
              skip @[spi_master.scala 73:26]
            node _dividerCounter_T_2 = add(dividerCounter, UInt<1>("h01")) @[spi_master.scala 76:46]
            node _dividerCounter_T_3 = tail(_dividerCounter_T_2, 1) @[spi_master.scala 76:46]
            dividerCounter <= _dividerCounter_T_3 @[spi_master.scala 76:28]
            skip @[spi_master.scala 61:38]
          else : @[spi_master.scala 77:66]
            node _T_14 = eq(dividerCounter, UInt<1>("h00")) @[spi_master.scala 77:36]
            when _T_14 : @[spi_master.scala 77:66]
              dividerCounter <= UInt<1>("h00") @[spi_master.scala 78:28]
              skip @[spi_master.scala 77:66]
            else : @[spi_master.scala 79:22]
              node _dividerCounter_T_4 = add(dividerCounter, UInt<1>("h01")) @[spi_master.scala 80:46]
              node _dividerCounter_T_5 = tail(_dividerCounter_T_4, 1) @[spi_master.scala 80:46]
              dividerCounter <= _dividerCounter_T_5 @[spi_master.scala 80:28]
              skip @[spi_master.scala 79:22]
          skip @[spi_master.scala 60:34]
    io.spi.sck <= sck @[spi_master.scala 84:16]
    node _io_spi_mosi_T = bits(shiftReg, 7, 7) @[spi_master.scala 85:28]
    io.spi.mosi <= _io_spi_mosi_T @[spi_master.scala 85:17]
    io.rx.bits <= rxData @[spi_master.scala 86:16]
    io.rx.valid <= rxValid @[spi_master.scala 87:17]
    io.spi.cs <= io.cs @[spi_master.scala 90:19]
    
  module LifeGameFram : 
    input clock : Clock
    input reset : UInt<1>
    output data : UInt<8>
    input initialize : UInt<1>
    output row : UInt<8>
    output spi_sck : UInt<1>
    output spi_si : UInt<1>
    input spi_so : UInt<1>
    output spi_cs_n : UInt<1>
    output spi_wp_n : UInt<1>
    output spi_hold_n : UInt<1>
    
    reg matrix : UInt<8>[8], clock @[lifegame_fram.scala 42:21]
    reg board : UInt<8>[8], clock @[lifegame_fram.scala 43:20]
    reg boardNext : UInt<8>[8], clock @[lifegame_fram.scala 44:24]
    reg readChecksum : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[lifegame_fram.scala 45:31]
    reg writeChecksum : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[lifegame_fram.scala 46:32]
    reg spiTxBuffer : UInt<8>[5], clock @[lifegame_fram.scala 48:26]
    reg spiRxBuffer : UInt<8>[5], clock @[lifegame_fram.scala 49:26]
    reg spiTxCounter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[lifegame_fram.scala 50:31]
    reg spiRxCounter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[lifegame_fram.scala 51:31]
    reg boardAddress : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[lifegame_fram.scala 52:31]
    reg updateRow : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[lifegame_fram.scala 53:28]
    reg updateColumn : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[lifegame_fram.scala 54:31]
    reg updateCounter : UInt<25>, clock with : (reset => (reset, UInt<25>("h00"))) @[lifegame_fram.scala 55:32]
    inst spim of SPIMaster @[lifegame_fram.scala 57:22]
    spim.clock <= clock
    spim.reset <= reset
    spi_sck <= spim.io.spi.sck @[lifegame_fram.scala 58:13]
    spi_si <= spim.io.spi.mosi @[lifegame_fram.scala 59:12]
    spi_cs_n <= spim.io.spi.cs @[lifegame_fram.scala 60:14]
    spim.io.spi.miso <= spi_so @[lifegame_fram.scala 61:22]
    spi_wp_n <= UInt<1>("h01") @[lifegame_fram.scala 62:14]
    spi_hold_n <= UInt<1>("h01") @[lifegame_fram.scala 63:16]
    reg cs_n : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[lifegame_fram.scala 64:23]
    spim.io.cs <= cs_n @[lifegame_fram.scala 65:20]
    reg state : UInt<4>, clock with : (reset => (reset, UInt<1>("h00"))) @[lifegame_fram.scala 81:24]
    node _spim_io_tx_bits_T = eq(state, UInt<3>("h05")) @[lifegame_fram.scala 85:15]
    node _spim_io_tx_bits_T_1 = eq(state, UInt<4>("h0b")) @[lifegame_fram.scala 86:14]
    node _spim_io_tx_bits_T_2 = lt(boardAddress, UInt<4>("h08")) @[lifegame_fram.scala 86:51]
    node _spim_io_tx_bits_T_3 = and(_spim_io_tx_bits_T_1, _spim_io_tx_bits_T_2) @[lifegame_fram.scala 86:35]
    node _spim_io_tx_bits_T_4 = bits(boardAddress, 2, 0)
    node _spim_io_tx_bits_T_5 = eq(state, UInt<4>("h0b")) @[lifegame_fram.scala 87:14]
    node _spim_io_tx_bits_T_6 = eq(boardAddress, UInt<4>("h08")) @[lifegame_fram.scala 87:51]
    node _spim_io_tx_bits_T_7 = and(_spim_io_tx_bits_T_5, _spim_io_tx_bits_T_6) @[lifegame_fram.scala 87:35]
    node _spim_io_tx_bits_T_8 = not(writeChecksum) @[lifegame_fram.scala 87:66]
    node _spim_io_tx_bits_T_9 = mux(_spim_io_tx_bits_T_7, _spim_io_tx_bits_T_8, spiTxBuffer[4]) @[Mux.scala 98:16]
    node _spim_io_tx_bits_T_10 = mux(_spim_io_tx_bits_T_3, boardNext[_spim_io_tx_bits_T_4], _spim_io_tx_bits_T_9) @[Mux.scala 98:16]
    node _spim_io_tx_bits_T_11 = mux(_spim_io_tx_bits_T, UInt<1>("h00"), _spim_io_tx_bits_T_10) @[Mux.scala 98:16]
    spim.io.tx.bits <= _spim_io_tx_bits_T_11 @[lifegame_fram.scala 84:21]
    node _spim_io_tx_valid_T = gt(spiTxCounter, UInt<1>("h00")) @[lifegame_fram.scala 89:38]
    spim.io.tx.valid <= _spim_io_tx_valid_T @[lifegame_fram.scala 89:22]
    node _T = gt(spiTxCounter, UInt<1>("h00")) @[lifegame_fram.scala 90:24]
    node _T_1 = and(_T, spim.io.tx.ready) @[lifegame_fram.scala 90:30]
    when _T_1 : @[lifegame_fram.scala 90:52]
      node _spiTxCounter_T = sub(spiTxCounter, UInt<1>("h01")) @[lifegame_fram.scala 91:36]
      node _spiTxCounter_T_1 = tail(_spiTxCounter_T, 1) @[lifegame_fram.scala 91:36]
      spiTxCounter <= _spiTxCounter_T_1 @[lifegame_fram.scala 91:20]
      node _T_2 = eq(state, UInt<4>("h0a")) @[lifegame_fram.scala 92:19]
      when _T_2 : @[lifegame_fram.scala 92:42]
        writeChecksum <= UInt<1>("h00") @[lifegame_fram.scala 93:23]
        skip @[lifegame_fram.scala 92:42]
      else : @[lifegame_fram.scala 94:49]
        node _T_3 = eq(state, UInt<4>("h0b")) @[lifegame_fram.scala 94:26]
        when _T_3 : @[lifegame_fram.scala 94:49]
          node _T_4 = lt(boardAddress, UInt<4>("h08")) @[lifegame_fram.scala 95:27]
          when _T_4 : @[lifegame_fram.scala 95:37]
            node _writeChecksum_T = bits(boardAddress, 2, 0)
            node _writeChecksum_T_1 = xor(writeChecksum, boardNext[_writeChecksum_T]) @[lifegame_fram.scala 96:42]
            writeChecksum <= _writeChecksum_T_1 @[lifegame_fram.scala 96:25]
            skip @[lifegame_fram.scala 95:37]
          skip @[lifegame_fram.scala 94:49]
      node _T_5 = eq(state, UInt<4>("h0b")) @[lifegame_fram.scala 99:19]
      when _T_5 : @[lifegame_fram.scala 99:42]
        node _T_6 = bits(boardAddress, 2, 0)
        node _T_7 = sub(spiTxCounter, UInt<1>("h01")) @[lifegame_fram.scala 100:143]
        node _T_8 = tail(_T_7, 1) @[lifegame_fram.scala 100:143]
        node _T_9 = bits(reset, 0, 0) @[lifegame_fram.scala 100:15]
        node _T_10 = eq(_T_9, UInt<1>("h00")) @[lifegame_fram.scala 100:15]
        when _T_10 : @[lifegame_fram.scala 100:15]
          printf(clock, UInt<1>(1), "[LIFEGAME] WriteBoard %x, %x, spiTxCounterNext=%d\n", boardAddress, boardNext[_T_6], _T_8) @[lifegame_fram.scala 100:15]
          skip @[lifegame_fram.scala 100:15]
        node _boardAddress_T = add(boardAddress, UInt<1>("h01")) @[lifegame_fram.scala 101:38]
        node _boardAddress_T_1 = tail(_boardAddress_T, 1) @[lifegame_fram.scala 101:38]
        boardAddress <= _boardAddress_T_1 @[lifegame_fram.scala 101:22]
        skip @[lifegame_fram.scala 99:42]
      else : @[lifegame_fram.scala 102:20]
        wire spiTxBufferNext : UInt<8>[5] @[lifegame_fram.scala 103:35]
        spiTxBufferNext[0] <= UInt<1>("h00") @[lifegame_fram.scala 105:28]
        spiTxBufferNext[1] <= spiTxBuffer[0] @[lifegame_fram.scala 107:34]
        spiTxBufferNext[2] <= spiTxBuffer[1] @[lifegame_fram.scala 107:34]
        spiTxBufferNext[3] <= spiTxBuffer[2] @[lifegame_fram.scala 107:34]
        spiTxBufferNext[4] <= spiTxBuffer[3] @[lifegame_fram.scala 107:34]
        spiTxBuffer[0] <= spiTxBufferNext[0] @[lifegame_fram.scala 109:21]
        spiTxBuffer[1] <= spiTxBufferNext[1] @[lifegame_fram.scala 109:21]
        spiTxBuffer[2] <= spiTxBufferNext[2] @[lifegame_fram.scala 109:21]
        spiTxBuffer[3] <= spiTxBufferNext[3] @[lifegame_fram.scala 109:21]
        spiTxBuffer[4] <= spiTxBufferNext[4] @[lifegame_fram.scala 109:21]
        node lo = cat(spiTxBufferNext[1], spiTxBufferNext[0]) @[lifegame_fram.scala 110:134]
        node hi_hi = cat(spiTxBufferNext[4], spiTxBufferNext[3]) @[lifegame_fram.scala 110:134]
        node hi = cat(hi_hi, spiTxBufferNext[2]) @[lifegame_fram.scala 110:134]
        node _T_11 = cat(hi, lo) @[lifegame_fram.scala 110:134]
        node _T_12 = sub(spiTxCounter, UInt<1>("h01")) @[lifegame_fram.scala 110:172]
        node _T_13 = tail(_T_12, 1) @[lifegame_fram.scala 110:172]
        node _T_14 = bits(reset, 0, 0) @[lifegame_fram.scala 110:15]
        node _T_15 = eq(_T_14, UInt<1>("h00")) @[lifegame_fram.scala 110:15]
        when _T_15 : @[lifegame_fram.scala 110:15]
          printf(clock, UInt<1>(1), "[LIFEGAME] Write Sent=%x BufferNext=%x, spiTxCounterNext=%d\n", spiTxBuffer[4], _T_11, _T_13) @[lifegame_fram.scala 110:15]
          skip @[lifegame_fram.scala 110:15]
        skip @[lifegame_fram.scala 102:20]
      skip @[lifegame_fram.scala 90:52]
    node _spim_io_rx_ready_T = gt(spiRxCounter, UInt<1>("h00")) @[lifegame_fram.scala 113:38]
    spim.io.rx.ready <= _spim_io_rx_ready_T @[lifegame_fram.scala 113:22]
    node _T_16 = gt(spiRxCounter, UInt<1>("h00")) @[lifegame_fram.scala 114:24]
    node _T_17 = and(_T_16, spim.io.rx.valid) @[lifegame_fram.scala 114:30]
    when _T_17 : @[lifegame_fram.scala 114:52]
      node _spiRxCounter_T = sub(spiRxCounter, UInt<1>("h01")) @[lifegame_fram.scala 116:36]
      node _spiRxCounter_T_1 = tail(_spiRxCounter_T, 1) @[lifegame_fram.scala 116:36]
      spiRxCounter <= _spiRxCounter_T_1 @[lifegame_fram.scala 116:20]
      node _T_18 = eq(state, UInt<3>("h04")) @[lifegame_fram.scala 117:19]
      when _T_18 : @[lifegame_fram.scala 117:41]
        readChecksum <= UInt<1>("h00") @[lifegame_fram.scala 118:22]
        skip @[lifegame_fram.scala 117:41]
      else : @[lifegame_fram.scala 119:48]
        node _T_19 = eq(state, UInt<3>("h05")) @[lifegame_fram.scala 119:26]
        when _T_19 : @[lifegame_fram.scala 119:48]
          node _readChecksum_T = xor(readChecksum, spim.io.rx.bits) @[lifegame_fram.scala 120:38]
          readChecksum <= _readChecksum_T @[lifegame_fram.scala 120:22]
          skip @[lifegame_fram.scala 119:48]
      node _T_20 = eq(state, UInt<3>("h05")) @[lifegame_fram.scala 122:19]
      when _T_20 : @[lifegame_fram.scala 122:41]
        node _T_21 = sub(spiRxCounter, UInt<1>("h01")) @[lifegame_fram.scala 123:125]
        node _T_22 = tail(_T_21, 1) @[lifegame_fram.scala 123:125]
        node _T_23 = bits(reset, 0, 0) @[lifegame_fram.scala 123:15]
        node _T_24 = eq(_T_23, UInt<1>("h00")) @[lifegame_fram.scala 123:15]
        when _T_24 : @[lifegame_fram.scala 123:15]
          printf(clock, UInt<1>(1), "[LIFEGAME] ReadBoard %x, %x, spiRxCounterNext=%d\n", boardAddress, spim.io.rx.bits, _T_22) @[lifegame_fram.scala 123:15]
          skip @[lifegame_fram.scala 123:15]
        node _boardAddress_T_2 = add(boardAddress, UInt<1>("h01")) @[lifegame_fram.scala 124:38]
        node _boardAddress_T_3 = tail(_boardAddress_T_2, 1) @[lifegame_fram.scala 124:38]
        boardAddress <= _boardAddress_T_3 @[lifegame_fram.scala 124:22]
        node _T_25 = lt(boardAddress, UInt<4>("h08")) @[lifegame_fram.scala 125:28]
        when _T_25 : @[lifegame_fram.scala 125:39]
          node _T_26 = bits(boardAddress, 2, 0)
          board[_T_26] <= spim.io.rx.bits @[lifegame_fram.scala 126:31]
          skip @[lifegame_fram.scala 125:39]
        skip @[lifegame_fram.scala 122:41]
      else : @[lifegame_fram.scala 128:20]
        wire spiRxBufferNext : UInt<8>[5] @[lifegame_fram.scala 129:35]
        spiRxBufferNext[0] <= spim.io.rx.bits @[lifegame_fram.scala 131:28]
        spiRxBufferNext[1] <= spiRxBuffer[0] @[lifegame_fram.scala 133:34]
        spiRxBufferNext[2] <= spiRxBuffer[1] @[lifegame_fram.scala 133:34]
        spiRxBufferNext[3] <= spiRxBuffer[2] @[lifegame_fram.scala 133:34]
        spiRxBufferNext[4] <= spiRxBuffer[3] @[lifegame_fram.scala 133:34]
        spiRxBuffer[0] <= spiRxBufferNext[0] @[lifegame_fram.scala 135:21]
        spiRxBuffer[1] <= spiRxBufferNext[1] @[lifegame_fram.scala 135:21]
        spiRxBuffer[2] <= spiRxBufferNext[2] @[lifegame_fram.scala 135:21]
        spiRxBuffer[3] <= spiRxBufferNext[3] @[lifegame_fram.scala 135:21]
        spiRxBuffer[4] <= spiRxBufferNext[4] @[lifegame_fram.scala 135:21]
        node lo_1 = cat(spiRxBufferNext[1], spiRxBufferNext[0]) @[lifegame_fram.scala 136:70]
        node hi_hi_1 = cat(spiRxBufferNext[4], spiRxBufferNext[3]) @[lifegame_fram.scala 136:70]
        node hi_1 = cat(hi_hi_1, spiRxBufferNext[2]) @[lifegame_fram.scala 136:70]
        node _T_27 = cat(hi_1, lo_1) @[lifegame_fram.scala 136:70]
        node _T_28 = sub(spiRxCounter, UInt<1>("h01")) @[lifegame_fram.scala 136:108]
        node _T_29 = tail(_T_28, 1) @[lifegame_fram.scala 136:108]
        node _T_30 = bits(reset, 0, 0) @[lifegame_fram.scala 136:15]
        node _T_31 = eq(_T_30, UInt<1>("h00")) @[lifegame_fram.scala 136:15]
        when _T_31 : @[lifegame_fram.scala 136:15]
          printf(clock, UInt<1>(1), "[LIFEGAME] Read %x, spiRxCounterNext=%d\n", _T_27, _T_29) @[lifegame_fram.scala 136:15]
          skip @[lifegame_fram.scala 136:15]
        skip @[lifegame_fram.scala 128:20]
      skip @[lifegame_fram.scala 114:52]
    node _T_32 = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_33 = asUInt(state) @[Conditional.scala 37:39]
    node _T_34 = eq(_T_32, _T_33) @[Conditional.scala 37:30]
    when _T_34 : @[Conditional.scala 40:58]
      node _T_35 = bits(reset, 0, 0) @[lifegame_fram.scala 143:15]
      node _T_36 = eq(_T_35, UInt<1>("h00")) @[lifegame_fram.scala 143:15]
      when _T_36 : @[lifegame_fram.scala 143:15]
        printf(clock, UInt<1>(1), "[LIFEGAME] Reset\n") @[lifegame_fram.scala 143:15]
        skip @[lifegame_fram.scala 143:15]
      cs_n <= UInt<1>("h00") @[lifegame_fram.scala 144:14]
      spiTxCounter <= UInt<3>("h05") @[lifegame_fram.scala 145:22]
      spiRxCounter <= UInt<3>("h05") @[lifegame_fram.scala 146:22]
      spiTxBuffer[4] <= UInt<8>("h09f") @[lifegame_fram.scala 147:42]
      spiTxBuffer[3] <= UInt<1>("h00") @[lifegame_fram.scala 148:42]
      spiTxBuffer[2] <= UInt<1>("h00") @[lifegame_fram.scala 149:42]
      spiTxBuffer[1] <= UInt<1>("h00") @[lifegame_fram.scala 150:42]
      spiTxBuffer[0] <= UInt<1>("h00") @[lifegame_fram.scala 151:42]
      state <= UInt<1>("h01") @[lifegame_fram.scala 152:15]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_37 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_38 = asUInt(state) @[Conditional.scala 37:39]
      node _T_39 = eq(_T_37, _T_38) @[Conditional.scala 37:30]
      when _T_39 : @[Conditional.scala 39:67]
        node _T_40 = eq(spiTxCounter, UInt<1>("h00")) @[lifegame_fram.scala 155:27]
        node _T_41 = eq(spiRxCounter, UInt<1>("h00")) @[lifegame_fram.scala 155:51]
        node _T_42 = and(_T_40, _T_41) @[lifegame_fram.scala 155:35]
        when _T_42 : @[lifegame_fram.scala 155:60]
          cs_n <= UInt<1>("h01") @[lifegame_fram.scala 156:16]
          node deviceId_lo = cat(spiRxBuffer[1], spiRxBuffer[0]) @[Cat.scala 30:58]
          node deviceId_hi = cat(spiRxBuffer[3], spiRxBuffer[2]) @[Cat.scala 30:58]
          node deviceId = cat(deviceId_hi, deviceId_lo) @[Cat.scala 30:58]
          node _T_43 = bits(reset, 0, 0) @[lifegame_fram.scala 158:17]
          node _T_44 = eq(_T_43, UInt<1>("h00")) @[lifegame_fram.scala 158:17]
          when _T_44 : @[lifegame_fram.scala 158:17]
            printf(clock, UInt<1>(1), "[LIFEGAME] ReadId DeviceID=%x\n", deviceId) @[lifegame_fram.scala 158:17]
            skip @[lifegame_fram.scala 158:17]
          node _T_45 = eq(deviceId, UInt<27>("h047f4803")) @[lifegame_fram.scala 159:25]
          when _T_45 : @[lifegame_fram.scala 159:44]
            state <= UInt<2>("h03") @[lifegame_fram.scala 160:19]
            skip @[lifegame_fram.scala 159:44]
          else : @[lifegame_fram.scala 161:24]
            state <= UInt<2>("h02") @[lifegame_fram.scala 162:19]
            skip @[lifegame_fram.scala 161:24]
          skip @[lifegame_fram.scala 155:60]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_46 = asUInt(UInt<2>("h02")) @[Conditional.scala 37:23]
        node _T_47 = asUInt(state) @[Conditional.scala 37:39]
        node _T_48 = eq(_T_46, _T_47) @[Conditional.scala 37:30]
        when _T_48 : @[Conditional.scala 39:67]
          matrix[0] <= UInt<8>("h081") @[lifegame_fram.scala 167:19]
          matrix[1] <= UInt<7>("h042") @[lifegame_fram.scala 168:19]
          matrix[2] <= UInt<6>("h024") @[lifegame_fram.scala 169:19]
          matrix[3] <= UInt<5>("h018") @[lifegame_fram.scala 170:19]
          matrix[4] <= UInt<5>("h018") @[lifegame_fram.scala 171:19]
          matrix[5] <= UInt<6>("h024") @[lifegame_fram.scala 172:19]
          matrix[6] <= UInt<7>("h042") @[lifegame_fram.scala 173:19]
          matrix[7] <= UInt<8>("h081") @[lifegame_fram.scala 174:19]
          state <= UInt<2>("h02") @[lifegame_fram.scala 175:15]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_49 = asUInt(UInt<2>("h03")) @[Conditional.scala 37:23]
          node _T_50 = asUInt(state) @[Conditional.scala 37:39]
          node _T_51 = eq(_T_49, _T_50) @[Conditional.scala 37:30]
          when _T_51 : @[Conditional.scala 39:67]
            node _T_52 = gt(updateCounter, UInt<1>("h00")) @[lifegame_fram.scala 178:29]
            when _T_52 : @[lifegame_fram.scala 178:37]
              node _updateCounter_T = sub(updateCounter, UInt<1>("h01")) @[lifegame_fram.scala 179:42]
              node _updateCounter_T_1 = tail(_updateCounter_T, 1) @[lifegame_fram.scala 179:42]
              updateCounter <= _updateCounter_T_1 @[lifegame_fram.scala 179:25]
              skip @[lifegame_fram.scala 178:37]
            else : @[lifegame_fram.scala 180:22]
              node _T_53 = bits(reset, 0, 0) @[lifegame_fram.scala 181:17]
              node _T_54 = eq(_T_53, UInt<1>("h00")) @[lifegame_fram.scala 181:17]
              when _T_54 : @[lifegame_fram.scala 181:17]
                printf(clock, UInt<1>(1), "[LIFEGAME] Idle->IssueRead\n") @[lifegame_fram.scala 181:17]
                skip @[lifegame_fram.scala 181:17]
              updateCounter <= UInt<25>("h019bfcbf") @[lifegame_fram.scala 182:25]
              cs_n <= UInt<1>("h00") @[lifegame_fram.scala 184:16]
              spiTxCounter <= UInt<3>("h04") @[lifegame_fram.scala 185:24]
              spiRxCounter <= UInt<3>("h04") @[lifegame_fram.scala 186:24]
              spiTxBuffer[4] <= UInt<2>("h03") @[lifegame_fram.scala 187:44]
              spiTxBuffer[3] <= UInt<1>("h00") @[lifegame_fram.scala 188:44]
              spiTxBuffer[2] <= UInt<1>("h00") @[lifegame_fram.scala 189:44]
              spiTxBuffer[1] <= UInt<1>("h00") @[lifegame_fram.scala 190:44]
              updateRow <= UInt<1>("h00") @[lifegame_fram.scala 192:21]
              updateColumn <= UInt<1>("h00") @[lifegame_fram.scala 193:24]
              state <= UInt<3>("h04") @[lifegame_fram.scala 195:17]
              skip @[lifegame_fram.scala 180:22]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_55 = asUInt(UInt<3>("h04")) @[Conditional.scala 37:23]
            node _T_56 = asUInt(state) @[Conditional.scala 37:39]
            node _T_57 = eq(_T_55, _T_56) @[Conditional.scala 37:30]
            when _T_57 : @[Conditional.scala 39:67]
              node _T_58 = eq(spiTxCounter, UInt<1>("h00")) @[lifegame_fram.scala 199:27]
              node _T_59 = eq(spiRxCounter, UInt<1>("h00")) @[lifegame_fram.scala 199:51]
              node _T_60 = and(_T_58, _T_59) @[lifegame_fram.scala 199:35]
              when _T_60 : @[lifegame_fram.scala 199:60]
                spiTxCounter <= UInt<4>("h09") @[lifegame_fram.scala 200:24]
                spiRxCounter <= UInt<4>("h09") @[lifegame_fram.scala 201:24]
                boardAddress <= UInt<1>("h00") @[lifegame_fram.scala 202:24]
                state <= UInt<3>("h05") @[lifegame_fram.scala 203:17]
                skip @[lifegame_fram.scala 199:60]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_61 = asUInt(UInt<3>("h05")) @[Conditional.scala 37:23]
              node _T_62 = asUInt(state) @[Conditional.scala 37:39]
              node _T_63 = eq(_T_61, _T_62) @[Conditional.scala 37:30]
              when _T_63 : @[Conditional.scala 39:67]
                node _T_64 = eq(spiTxCounter, UInt<1>("h00")) @[lifegame_fram.scala 207:27]
                node _T_65 = eq(spiRxCounter, UInt<1>("h00")) @[lifegame_fram.scala 207:51]
                node _T_66 = and(_T_64, _T_65) @[lifegame_fram.scala 207:35]
                when _T_66 : @[lifegame_fram.scala 207:60]
                  cs_n <= UInt<1>("h01") @[lifegame_fram.scala 208:16]
                  node _T_67 = bits(reset, 0, 0) @[lifegame_fram.scala 209:17]
                  node _T_68 = eq(_T_67, UInt<1>("h00")) @[lifegame_fram.scala 209:17]
                  when _T_68 : @[lifegame_fram.scala 209:17]
                    printf(clock, UInt<1>(1), "[LIFEGAME] Checksum=%x ", readChecksum) @[lifegame_fram.scala 209:17]
                    skip @[lifegame_fram.scala 209:17]
                  node _T_69 = eq(readChecksum, UInt<8>("h0ff")) @[lifegame_fram.scala 210:30]
                  when _T_69 : @[lifegame_fram.scala 210:43]
                    node _T_70 = bits(reset, 0, 0) @[lifegame_fram.scala 211:19]
                    node _T_71 = eq(_T_70, UInt<1>("h00")) @[lifegame_fram.scala 211:19]
                    when _T_71 : @[lifegame_fram.scala 211:19]
                      printf(clock, UInt<1>(1), "Valid\n") @[lifegame_fram.scala 211:19]
                      skip @[lifegame_fram.scala 211:19]
                    updateColumn <= UInt<1>("h00") @[lifegame_fram.scala 212:26]
                    updateRow <= UInt<1>("h00") @[lifegame_fram.scala 213:23]
                    node _T_72 = or(board[0], board[1]) @[lifegame_fram.scala 214:44]
                    node _T_73 = or(_T_72, board[2]) @[lifegame_fram.scala 214:44]
                    node _T_74 = or(_T_73, board[3]) @[lifegame_fram.scala 214:44]
                    node _T_75 = or(_T_74, board[4]) @[lifegame_fram.scala 214:44]
                    node _T_76 = or(_T_75, board[5]) @[lifegame_fram.scala 214:44]
                    node _T_77 = or(_T_76, board[6]) @[lifegame_fram.scala 214:44]
                    node _T_78 = or(_T_77, board[7]) @[lifegame_fram.scala 214:44]
                    node _T_79 = eq(_T_78, UInt<1>("h00")) @[lifegame_fram.scala 214:49]
                    when _T_79 : @[lifegame_fram.scala 214:59]
                      state <= UInt<3>("h06") @[lifegame_fram.scala 216:21]
                      skip @[lifegame_fram.scala 214:59]
                    else : @[lifegame_fram.scala 217:26]
                      state <= UInt<3>("h07") @[lifegame_fram.scala 219:21]
                      skip @[lifegame_fram.scala 217:26]
                    skip @[lifegame_fram.scala 210:43]
                  else : @[lifegame_fram.scala 221:24]
                    node _T_80 = bits(reset, 0, 0) @[lifegame_fram.scala 222:19]
                    node _T_81 = eq(_T_80, UInt<1>("h00")) @[lifegame_fram.scala 222:19]
                    when _T_81 : @[lifegame_fram.scala 222:19]
                      printf(clock, UInt<1>(1), "Invalid\n") @[lifegame_fram.scala 222:19]
                      skip @[lifegame_fram.scala 222:19]
                    state <= UInt<3>("h06") @[lifegame_fram.scala 223:19]
                    skip @[lifegame_fram.scala 221:24]
                  skip @[lifegame_fram.scala 207:60]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_82 = asUInt(UInt<3>("h06")) @[Conditional.scala 37:23]
                node _T_83 = asUInt(state) @[Conditional.scala 37:39]
                node _T_84 = eq(_T_82, _T_83) @[Conditional.scala 37:30]
                when _T_84 : @[Conditional.scala 39:67]
                  boardNext[0] <= UInt<4>("h09") @[lifegame_fram.scala 228:22]
                  boardNext[1] <= UInt<5>("h010") @[lifegame_fram.scala 229:22]
                  boardNext[2] <= UInt<5>("h011") @[lifegame_fram.scala 230:22]
                  boardNext[3] <= UInt<5>("h01e") @[lifegame_fram.scala 231:22]
                  boardNext[4] <= UInt<1>("h00") @[lifegame_fram.scala 232:22]
                  boardNext[5] <= UInt<7>("h040") @[lifegame_fram.scala 233:22]
                  boardNext[6] <= UInt<7>("h040") @[lifegame_fram.scala 234:22]
                  boardNext[7] <= UInt<7>("h040") @[lifegame_fram.scala 235:22]
                  cs_n <= UInt<1>("h00") @[lifegame_fram.scala 238:14]
                  spiTxCounter <= UInt<1>("h01") @[lifegame_fram.scala 239:22]
                  spiRxCounter <= UInt<1>("h01") @[lifegame_fram.scala 240:22]
                  spiTxBuffer[4] <= UInt<3>("h06") @[lifegame_fram.scala 241:42]
                  state <= UInt<4>("h09") @[lifegame_fram.scala 242:15]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_85 = asUInt(UInt<3>("h07")) @[Conditional.scala 37:23]
                  node _T_86 = asUInt(state) @[Conditional.scala 37:39]
                  node _T_87 = eq(_T_85, _T_86) @[Conditional.scala 37:30]
                  when _T_87 : @[Conditional.scala 39:67]
                    node _upperRow_T = gt(updateRow, UInt<1>("h00")) @[lifegame_fram.scala 246:38]
                    node _upperRow_T_1 = sub(updateRow, UInt<1>("h01")) @[lifegame_fram.scala 246:61]
                    node _upperRow_T_2 = tail(_upperRow_T_1, 1) @[lifegame_fram.scala 246:61]
                    node upperRow = mux(_upperRow_T, board[_upperRow_T_2], UInt<8>("h00")) @[lifegame_fram.scala 246:27]
                    node _bottomRow_T = lt(updateRow, UInt<3>("h07")) @[lifegame_fram.scala 248:39]
                    node _bottomRow_T_1 = add(updateRow, UInt<1>("h01")) @[lifegame_fram.scala 248:71]
                    node _bottomRow_T_2 = tail(_bottomRow_T_1, 1) @[lifegame_fram.scala 248:71]
                    node bottomRow = mux(_bottomRow_T, board[_bottomRow_T_2], UInt<8>("h00")) @[lifegame_fram.scala 248:28]
                    node _ul_T = gt(updateColumn, UInt<1>("h00")) @[lifegame_fram.scala 249:35]
                    node _ul_T_1 = sub(updateColumn, UInt<1>("h01")) @[lifegame_fram.scala 249:64]
                    node _ul_T_2 = tail(_ul_T_1, 1) @[lifegame_fram.scala 249:64]
                    node _ul_T_3 = dshr(upperRow, _ul_T_2) @[lifegame_fram.scala 249:50]
                    node _ul_T_4 = bits(_ul_T_3, 0, 0) @[lifegame_fram.scala 249:50]
                    node ul = mux(_ul_T, _ul_T_4, UInt<1>("h00")) @[lifegame_fram.scala 249:21]
                    node _cl_T = gt(updateColumn, UInt<1>("h00")) @[lifegame_fram.scala 250:35]
                    node _cl_T_1 = sub(updateColumn, UInt<1>("h01")) @[lifegame_fram.scala 250:65]
                    node _cl_T_2 = tail(_cl_T_1, 1) @[lifegame_fram.scala 250:65]
                    node _cl_T_3 = dshr(board[updateRow], _cl_T_2) @[lifegame_fram.scala 250:51]
                    node _cl_T_4 = bits(_cl_T_3, 0, 0) @[lifegame_fram.scala 250:51]
                    node cl = mux(_cl_T, _cl_T_4, UInt<1>("h00")) @[lifegame_fram.scala 250:21]
                    node _bl_T = gt(updateColumn, UInt<1>("h00")) @[lifegame_fram.scala 251:35]
                    node _bl_T_1 = sub(updateColumn, UInt<1>("h01")) @[lifegame_fram.scala 251:65]
                    node _bl_T_2 = tail(_bl_T_1, 1) @[lifegame_fram.scala 251:65]
                    node _bl_T_3 = dshr(bottomRow, _bl_T_2) @[lifegame_fram.scala 251:51]
                    node _bl_T_4 = bits(_bl_T_3, 0, 0) @[lifegame_fram.scala 251:51]
                    node bl = mux(_bl_T, _bl_T_4, UInt<1>("h00")) @[lifegame_fram.scala 251:21]
                    node _uc_T = dshr(upperRow, updateColumn) @[lifegame_fram.scala 252:26]
                    node uc = bits(_uc_T, 0, 0) @[lifegame_fram.scala 252:26]
                    node _cc_T = dshr(board[updateRow], updateColumn) @[lifegame_fram.scala 253:27]
                    node cc = bits(_cc_T, 0, 0) @[lifegame_fram.scala 253:27]
                    node _bc_T = dshr(bottomRow, updateColumn) @[lifegame_fram.scala 254:27]
                    node bc = bits(_bc_T, 0, 0) @[lifegame_fram.scala 254:27]
                    node _ur_T = lt(updateColumn, UInt<3>("h07")) @[lifegame_fram.scala 255:35]
                    node _ur_T_1 = add(updateColumn, UInt<1>("h01")) @[lifegame_fram.scala 255:76]
                    node _ur_T_2 = tail(_ur_T_1, 1) @[lifegame_fram.scala 255:76]
                    node _ur_T_3 = dshr(upperRow, _ur_T_2) @[lifegame_fram.scala 255:62]
                    node _ur_T_4 = bits(_ur_T_3, 0, 0) @[lifegame_fram.scala 255:62]
                    node ur = mux(_ur_T, _ur_T_4, UInt<1>("h00")) @[lifegame_fram.scala 255:21]
                    node _cr_T = lt(updateColumn, UInt<3>("h07")) @[lifegame_fram.scala 256:35]
                    node _cr_T_1 = add(updateColumn, UInt<1>("h01")) @[lifegame_fram.scala 256:77]
                    node _cr_T_2 = tail(_cr_T_1, 1) @[lifegame_fram.scala 256:77]
                    node _cr_T_3 = dshr(board[updateRow], _cr_T_2) @[lifegame_fram.scala 256:63]
                    node _cr_T_4 = bits(_cr_T_3, 0, 0) @[lifegame_fram.scala 256:63]
                    node cr = mux(_cr_T, _cr_T_4, UInt<1>("h00")) @[lifegame_fram.scala 256:21]
                    node _br_T = lt(updateColumn, UInt<3>("h07")) @[lifegame_fram.scala 257:35]
                    node _br_T_1 = add(updateColumn, UInt<1>("h01")) @[lifegame_fram.scala 257:77]
                    node _br_T_2 = tail(_br_T_1, 1) @[lifegame_fram.scala 257:77]
                    node _br_T_3 = dshr(bottomRow, _br_T_2) @[lifegame_fram.scala 257:63]
                    node _br_T_4 = bits(_br_T_3, 0, 0) @[lifegame_fram.scala 257:63]
                    node br = mux(_br_T, _br_T_4, UInt<1>("h00")) @[lifegame_fram.scala 257:21]
                    node _count_T = add(ul, UInt<3>("h00")) @[lifegame_fram.scala 258:68]
                    node _count_T_1 = tail(_count_T, 1) @[lifegame_fram.scala 258:68]
                    node _count_T_2 = add(cl, UInt<3>("h00")) @[lifegame_fram.scala 258:68]
                    node _count_T_3 = tail(_count_T_2, 1) @[lifegame_fram.scala 258:68]
                    node _count_T_4 = add(bl, UInt<3>("h00")) @[lifegame_fram.scala 258:68]
                    node _count_T_5 = tail(_count_T_4, 1) @[lifegame_fram.scala 258:68]
                    node _count_T_6 = add(uc, UInt<3>("h00")) @[lifegame_fram.scala 258:68]
                    node _count_T_7 = tail(_count_T_6, 1) @[lifegame_fram.scala 258:68]
                    node _count_T_8 = add(bc, UInt<3>("h00")) @[lifegame_fram.scala 258:68]
                    node _count_T_9 = tail(_count_T_8, 1) @[lifegame_fram.scala 258:68]
                    node _count_T_10 = add(ur, UInt<3>("h00")) @[lifegame_fram.scala 258:68]
                    node _count_T_11 = tail(_count_T_10, 1) @[lifegame_fram.scala 258:68]
                    node _count_T_12 = add(cr, UInt<3>("h00")) @[lifegame_fram.scala 258:68]
                    node _count_T_13 = tail(_count_T_12, 1) @[lifegame_fram.scala 258:68]
                    node _count_T_14 = add(br, UInt<3>("h00")) @[lifegame_fram.scala 258:68]
                    node _count_T_15 = tail(_count_T_14, 1) @[lifegame_fram.scala 258:68]
                    node _count_T_16 = add(_count_T_1, _count_T_3) @[lifegame_fram.scala 258:99]
                    node _count_T_17 = tail(_count_T_16, 1) @[lifegame_fram.scala 258:99]
                    node _count_T_18 = add(_count_T_17, _count_T_5) @[lifegame_fram.scala 258:99]
                    node _count_T_19 = tail(_count_T_18, 1) @[lifegame_fram.scala 258:99]
                    node _count_T_20 = add(_count_T_19, _count_T_7) @[lifegame_fram.scala 258:99]
                    node _count_T_21 = tail(_count_T_20, 1) @[lifegame_fram.scala 258:99]
                    node _count_T_22 = add(_count_T_21, _count_T_9) @[lifegame_fram.scala 258:99]
                    node _count_T_23 = tail(_count_T_22, 1) @[lifegame_fram.scala 258:99]
                    node _count_T_24 = add(_count_T_23, _count_T_11) @[lifegame_fram.scala 258:99]
                    node _count_T_25 = tail(_count_T_24, 1) @[lifegame_fram.scala 258:99]
                    node _count_T_26 = add(_count_T_25, _count_T_13) @[lifegame_fram.scala 258:99]
                    node _count_T_27 = tail(_count_T_26, 1) @[lifegame_fram.scala 258:99]
                    node _count_T_28 = add(_count_T_27, _count_T_15) @[lifegame_fram.scala 258:99]
                    node count = tail(_count_T_28, 1) @[lifegame_fram.scala 258:99]
                    node _cell_T = dshr(board[updateRow], updateColumn) @[lifegame_fram.scala 259:48]
                    node _cell_T_1 = bits(_cell_T, 0, 0) @[lifegame_fram.scala 259:48]
                    wire cell : UInt<1>
                    cell <= _cell_T_1
                    node _T_88 = eq(cc, UInt<1>("h00")) @[lifegame_fram.scala 261:14]
                    node _T_89 = eq(count, UInt<2>("h03")) @[lifegame_fram.scala 261:27]
                    node _T_90 = and(_T_88, _T_89) @[lifegame_fram.scala 261:18]
                    when _T_90 : @[lifegame_fram.scala 261:36]
                      cell <= UInt<1>("h01") @[lifegame_fram.scala 262:16]
                      skip @[lifegame_fram.scala 261:36]
                    else : @[lifegame_fram.scala 263:60]
                      node _T_91 = leq(count, UInt<1>("h01")) @[lifegame_fram.scala 263:34]
                      node _T_92 = leq(UInt<3>("h04"), count) @[lifegame_fram.scala 263:48]
                      node _T_93 = or(_T_91, _T_92) @[lifegame_fram.scala 263:41]
                      node _T_94 = and(cc, _T_93) @[lifegame_fram.scala 263:24]
                      when _T_94 : @[lifegame_fram.scala 263:60]
                        cell <= UInt<1>("h00") @[lifegame_fram.scala 264:16]
                        skip @[lifegame_fram.scala 263:60]
                    node _boardNext_T = eq(updateColumn, UInt<1>("h00")) @[lifegame_fram.scala 266:86]
                    node _boardNext_T_1 = bits(boardNext[updateRow], 0, 0) @[lifegame_fram.scala 266:121]
                    node _boardNext_T_2 = mux(_boardNext_T, cell, _boardNext_T_1) @[lifegame_fram.scala 266:72]
                    node _boardNext_T_3 = eq(updateColumn, UInt<1>("h01")) @[lifegame_fram.scala 266:86]
                    node _boardNext_T_4 = bits(boardNext[updateRow], 1, 1) @[lifegame_fram.scala 266:121]
                    node _boardNext_T_5 = mux(_boardNext_T_3, cell, _boardNext_T_4) @[lifegame_fram.scala 266:72]
                    node _boardNext_T_6 = eq(updateColumn, UInt<2>("h02")) @[lifegame_fram.scala 266:86]
                    node _boardNext_T_7 = bits(boardNext[updateRow], 2, 2) @[lifegame_fram.scala 266:121]
                    node _boardNext_T_8 = mux(_boardNext_T_6, cell, _boardNext_T_7) @[lifegame_fram.scala 266:72]
                    node _boardNext_T_9 = eq(updateColumn, UInt<2>("h03")) @[lifegame_fram.scala 266:86]
                    node _boardNext_T_10 = bits(boardNext[updateRow], 3, 3) @[lifegame_fram.scala 266:121]
                    node _boardNext_T_11 = mux(_boardNext_T_9, cell, _boardNext_T_10) @[lifegame_fram.scala 266:72]
                    node _boardNext_T_12 = eq(updateColumn, UInt<3>("h04")) @[lifegame_fram.scala 266:86]
                    node _boardNext_T_13 = bits(boardNext[updateRow], 4, 4) @[lifegame_fram.scala 266:121]
                    node _boardNext_T_14 = mux(_boardNext_T_12, cell, _boardNext_T_13) @[lifegame_fram.scala 266:72]
                    node _boardNext_T_15 = eq(updateColumn, UInt<3>("h05")) @[lifegame_fram.scala 266:86]
                    node _boardNext_T_16 = bits(boardNext[updateRow], 5, 5) @[lifegame_fram.scala 266:121]
                    node _boardNext_T_17 = mux(_boardNext_T_15, cell, _boardNext_T_16) @[lifegame_fram.scala 266:72]
                    node _boardNext_T_18 = eq(updateColumn, UInt<3>("h06")) @[lifegame_fram.scala 266:86]
                    node _boardNext_T_19 = bits(boardNext[updateRow], 6, 6) @[lifegame_fram.scala 266:121]
                    node _boardNext_T_20 = mux(_boardNext_T_18, cell, _boardNext_T_19) @[lifegame_fram.scala 266:72]
                    node _boardNext_T_21 = eq(updateColumn, UInt<3>("h07")) @[lifegame_fram.scala 266:86]
                    node _boardNext_T_22 = bits(boardNext[updateRow], 7, 7) @[lifegame_fram.scala 266:121]
                    node _boardNext_T_23 = mux(_boardNext_T_21, cell, _boardNext_T_22) @[lifegame_fram.scala 266:72]
                    wire _boardNext_WIRE : UInt<1>[8] @[lifegame_fram.scala 266:40]
                    _boardNext_WIRE[0] <= _boardNext_T_2 @[lifegame_fram.scala 266:40]
                    _boardNext_WIRE[1] <= _boardNext_T_5 @[lifegame_fram.scala 266:40]
                    _boardNext_WIRE[2] <= _boardNext_T_8 @[lifegame_fram.scala 266:40]
                    _boardNext_WIRE[3] <= _boardNext_T_11 @[lifegame_fram.scala 266:40]
                    _boardNext_WIRE[4] <= _boardNext_T_14 @[lifegame_fram.scala 266:40]
                    _boardNext_WIRE[5] <= _boardNext_T_17 @[lifegame_fram.scala 266:40]
                    _boardNext_WIRE[6] <= _boardNext_T_20 @[lifegame_fram.scala 266:40]
                    _boardNext_WIRE[7] <= _boardNext_T_23 @[lifegame_fram.scala 266:40]
                    node boardNext_lo_lo = cat(_boardNext_WIRE[1], _boardNext_WIRE[0]) @[lifegame_fram.scala 266:134]
                    node boardNext_lo_hi = cat(_boardNext_WIRE[3], _boardNext_WIRE[2]) @[lifegame_fram.scala 266:134]
                    node boardNext_lo = cat(boardNext_lo_hi, boardNext_lo_lo) @[lifegame_fram.scala 266:134]
                    node boardNext_hi_lo = cat(_boardNext_WIRE[5], _boardNext_WIRE[4]) @[lifegame_fram.scala 266:134]
                    node boardNext_hi_hi = cat(_boardNext_WIRE[7], _boardNext_WIRE[6]) @[lifegame_fram.scala 266:134]
                    node boardNext_hi = cat(boardNext_hi_hi, boardNext_hi_lo) @[lifegame_fram.scala 266:134]
                    node _boardNext_T_24 = cat(boardNext_hi, boardNext_lo) @[lifegame_fram.scala 266:134]
                    boardNext[updateRow] <= _boardNext_T_24 @[lifegame_fram.scala 266:30]
                    node _T_95 = eq(updateColumn, UInt<3>("h07")) @[lifegame_fram.scala 268:27]
                    when _T_95 : @[lifegame_fram.scala 268:48]
                      node _updateRow_T = add(updateRow, UInt<1>("h01")) @[lifegame_fram.scala 269:34]
                      node _updateRow_T_1 = tail(_updateRow_T, 1) @[lifegame_fram.scala 269:34]
                      updateRow <= _updateRow_T_1 @[lifegame_fram.scala 269:21]
                      updateColumn <= UInt<1>("h00") @[lifegame_fram.scala 270:24]
                      node _T_96 = eq(updateRow, UInt<3>("h07")) @[lifegame_fram.scala 271:26]
                      when _T_96 : @[lifegame_fram.scala 271:44]
                        state <= UInt<4>("h08") @[lifegame_fram.scala 272:19]
                        skip @[lifegame_fram.scala 271:44]
                      skip @[lifegame_fram.scala 268:48]
                    else : @[lifegame_fram.scala 274:22]
                      node _updateColumn_T = add(updateColumn, UInt<1>("h01")) @[lifegame_fram.scala 275:40]
                      node _updateColumn_T_1 = tail(_updateColumn_T, 1) @[lifegame_fram.scala 275:40]
                      updateColumn <= _updateColumn_T_1 @[lifegame_fram.scala 275:24]
                      skip @[lifegame_fram.scala 274:22]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_97 = asUInt(UInt<4>("h08")) @[Conditional.scala 37:23]
                    node _T_98 = asUInt(state) @[Conditional.scala 37:39]
                    node _T_99 = eq(_T_97, _T_98) @[Conditional.scala 37:30]
                    when _T_99 : @[Conditional.scala 39:67]
                      node _stall_T = xor(board[0], boardNext[0]) @[lifegame_fram.scala 279:56]
                      node _stall_T_1 = xor(board[1], boardNext[1]) @[lifegame_fram.scala 279:56]
                      node _stall_T_2 = xor(board[2], boardNext[2]) @[lifegame_fram.scala 279:56]
                      node _stall_T_3 = xor(board[3], boardNext[3]) @[lifegame_fram.scala 279:56]
                      node _stall_T_4 = xor(board[4], boardNext[4]) @[lifegame_fram.scala 279:56]
                      node _stall_T_5 = xor(board[5], boardNext[5]) @[lifegame_fram.scala 279:56]
                      node _stall_T_6 = xor(board[6], boardNext[6]) @[lifegame_fram.scala 279:56]
                      node _stall_T_7 = xor(board[7], boardNext[7]) @[lifegame_fram.scala 279:56]
                      node _stall_T_8 = or(_stall_T, _stall_T_1) @[lifegame_fram.scala 279:83]
                      node _stall_T_9 = or(_stall_T_8, _stall_T_2) @[lifegame_fram.scala 279:83]
                      node _stall_T_10 = or(_stall_T_9, _stall_T_3) @[lifegame_fram.scala 279:83]
                      node _stall_T_11 = or(_stall_T_10, _stall_T_4) @[lifegame_fram.scala 279:83]
                      node _stall_T_12 = or(_stall_T_11, _stall_T_5) @[lifegame_fram.scala 279:83]
                      node _stall_T_13 = or(_stall_T_12, _stall_T_6) @[lifegame_fram.scala 279:83]
                      node _stall_T_14 = or(_stall_T_13, _stall_T_7) @[lifegame_fram.scala 279:83]
                      node stall = eq(_stall_T_14, UInt<1>("h00")) @[lifegame_fram.scala 279:88]
                      node _T_100 = bits(reset, 0, 0) @[lifegame_fram.scala 280:15]
                      node _T_101 = eq(_T_100, UInt<1>("h00")) @[lifegame_fram.scala 280:15]
                      when _T_101 : @[lifegame_fram.scala 280:15]
                        printf(clock, UInt<1>(1), "[LIFEGAME] CheckStall %d\n", stall) @[lifegame_fram.scala 280:15]
                        skip @[lifegame_fram.scala 280:15]
                      node _T_102 = or(stall, initialize) @[lifegame_fram.scala 281:21]
                      when _T_102 : @[lifegame_fram.scala 281:37]
                        state <= UInt<3>("h06") @[lifegame_fram.scala 283:17]
                        skip @[lifegame_fram.scala 281:37]
                      else : @[lifegame_fram.scala 284:22]
                        cs_n <= UInt<1>("h00") @[lifegame_fram.scala 285:16]
                        spiTxCounter <= UInt<1>("h01") @[lifegame_fram.scala 286:24]
                        spiTxBuffer[4] <= UInt<3>("h06") @[lifegame_fram.scala 287:44]
                        spiRxCounter <= UInt<1>("h01") @[lifegame_fram.scala 288:24]
                        state <= UInt<4>("h09") @[lifegame_fram.scala 289:17]
                        skip @[lifegame_fram.scala 284:22]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_103 = asUInt(UInt<4>("h09")) @[Conditional.scala 37:23]
                      node _T_104 = asUInt(state) @[Conditional.scala 37:39]
                      node _T_105 = eq(_T_103, _T_104) @[Conditional.scala 37:30]
                      when _T_105 : @[Conditional.scala 39:67]
                        matrix[0] <= boardNext[0] @[lifegame_fram.scala 293:16]
                        matrix[1] <= boardNext[1] @[lifegame_fram.scala 293:16]
                        matrix[2] <= boardNext[2] @[lifegame_fram.scala 293:16]
                        matrix[3] <= boardNext[3] @[lifegame_fram.scala 293:16]
                        matrix[4] <= boardNext[4] @[lifegame_fram.scala 293:16]
                        matrix[5] <= boardNext[5] @[lifegame_fram.scala 293:16]
                        matrix[6] <= boardNext[6] @[lifegame_fram.scala 293:16]
                        matrix[7] <= boardNext[7] @[lifegame_fram.scala 293:16]
                        node _T_106 = eq(spiTxCounter, UInt<1>("h00")) @[lifegame_fram.scala 294:27]
                        node _T_107 = eq(spiRxCounter, UInt<1>("h00")) @[lifegame_fram.scala 294:51]
                        node _T_108 = and(_T_106, _T_107) @[lifegame_fram.scala 294:35]
                        when _T_108 : @[lifegame_fram.scala 294:60]
                          cs_n <= UInt<1>("h01") @[lifegame_fram.scala 295:16]
                          spiTxCounter <= UInt<3>("h04") @[lifegame_fram.scala 296:24]
                          spiTxBuffer[4] <= UInt<2>("h02") @[lifegame_fram.scala 297:44]
                          spiTxBuffer[3] <= UInt<1>("h00") @[lifegame_fram.scala 298:44]
                          spiTxBuffer[2] <= UInt<1>("h00") @[lifegame_fram.scala 299:44]
                          spiTxBuffer[1] <= UInt<1>("h00") @[lifegame_fram.scala 300:44]
                          spiRxCounter <= UInt<3>("h04") @[lifegame_fram.scala 301:24]
                          state <= UInt<4>("h0a") @[lifegame_fram.scala 302:17]
                          skip @[lifegame_fram.scala 294:60]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_109 = asUInt(UInt<4>("h0a")) @[Conditional.scala 37:23]
                        node _T_110 = asUInt(state) @[Conditional.scala 37:39]
                        node _T_111 = eq(_T_109, _T_110) @[Conditional.scala 37:30]
                        when _T_111 : @[Conditional.scala 39:67]
                          cs_n <= UInt<1>("h00") @[lifegame_fram.scala 306:14]
                          node _T_112 = eq(spiTxCounter, UInt<1>("h00")) @[lifegame_fram.scala 307:27]
                          node _T_113 = eq(spiRxCounter, UInt<1>("h00")) @[lifegame_fram.scala 307:51]
                          node _T_114 = and(_T_112, _T_113) @[lifegame_fram.scala 307:35]
                          when _T_114 : @[lifegame_fram.scala 307:60]
                            spiTxCounter <= UInt<4>("h09") @[lifegame_fram.scala 308:24]
                            spiRxCounter <= UInt<4>("h09") @[lifegame_fram.scala 309:24]
                            boardAddress <= UInt<1>("h00") @[lifegame_fram.scala 310:24]
                            state <= UInt<4>("h0b") @[lifegame_fram.scala 311:17]
                            skip @[lifegame_fram.scala 307:60]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_115 = asUInt(UInt<4>("h0b")) @[Conditional.scala 37:23]
                          node _T_116 = asUInt(state) @[Conditional.scala 37:39]
                          node _T_117 = eq(_T_115, _T_116) @[Conditional.scala 37:30]
                          when _T_117 : @[Conditional.scala 39:67]
                            node _T_118 = eq(spiTxCounter, UInt<1>("h00")) @[lifegame_fram.scala 315:27]
                            node _T_119 = eq(spiRxCounter, UInt<1>("h00")) @[lifegame_fram.scala 315:51]
                            node _T_120 = and(_T_118, _T_119) @[lifegame_fram.scala 315:35]
                            when _T_120 : @[lifegame_fram.scala 315:60]
                              cs_n <= UInt<1>("h01") @[lifegame_fram.scala 316:16]
                              state <= UInt<2>("h03") @[lifegame_fram.scala 317:17]
                              skip @[lifegame_fram.scala 315:60]
                            skip @[Conditional.scala 39:67]
    reg refreshCounter : UInt<15>, clock with : (reset => (reset, UInt<15>("h00"))) @[lifegame_fram.scala 322:33]
    reg rowReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h01"))) @[lifegame_fram.scala 323:25]
    wire rowEnable : UInt<1>
    rowEnable <= UInt<1>("h01")
    node _row_T = mux(rowEnable, rowReg, UInt<8>("h00")) @[lifegame_fram.scala 325:15]
    row <= _row_T @[lifegame_fram.scala 325:9]
    node _data_T = shl(UInt<1>("h01"), 0) @[lifegame_fram.scala 327:72]
    node _data_T_1 = eq(rowReg, _data_T) @[lifegame_fram.scala 327:63]
    node _data_T_2 = shl(UInt<1>("h01"), 1) @[lifegame_fram.scala 327:72]
    node _data_T_3 = eq(rowReg, _data_T_2) @[lifegame_fram.scala 327:63]
    node _data_T_4 = shl(UInt<1>("h01"), 2) @[lifegame_fram.scala 327:72]
    node _data_T_5 = eq(rowReg, _data_T_4) @[lifegame_fram.scala 327:63]
    node _data_T_6 = shl(UInt<1>("h01"), 3) @[lifegame_fram.scala 327:72]
    node _data_T_7 = eq(rowReg, _data_T_6) @[lifegame_fram.scala 327:63]
    node _data_T_8 = shl(UInt<1>("h01"), 4) @[lifegame_fram.scala 327:72]
    node _data_T_9 = eq(rowReg, _data_T_8) @[lifegame_fram.scala 327:63]
    node _data_T_10 = shl(UInt<1>("h01"), 5) @[lifegame_fram.scala 327:72]
    node _data_T_11 = eq(rowReg, _data_T_10) @[lifegame_fram.scala 327:63]
    node _data_T_12 = shl(UInt<1>("h01"), 6) @[lifegame_fram.scala 327:72]
    node _data_T_13 = eq(rowReg, _data_T_12) @[lifegame_fram.scala 327:63]
    node _data_T_14 = shl(UInt<1>("h01"), 7) @[lifegame_fram.scala 327:72]
    node _data_T_15 = eq(rowReg, _data_T_14) @[lifegame_fram.scala 327:63]
    node _data_T_16 = mux(_data_T_15, matrix[7], UInt<1>("h00")) @[Mux.scala 98:16]
    node _data_T_17 = mux(_data_T_13, matrix[6], _data_T_16) @[Mux.scala 98:16]
    node _data_T_18 = mux(_data_T_11, matrix[5], _data_T_17) @[Mux.scala 98:16]
    node _data_T_19 = mux(_data_T_9, matrix[4], _data_T_18) @[Mux.scala 98:16]
    node _data_T_20 = mux(_data_T_7, matrix[3], _data_T_19) @[Mux.scala 98:16]
    node _data_T_21 = mux(_data_T_5, matrix[2], _data_T_20) @[Mux.scala 98:16]
    node _data_T_22 = mux(_data_T_3, matrix[1], _data_T_21) @[Mux.scala 98:16]
    node _data_T_23 = mux(_data_T_1, matrix[0], _data_T_22) @[Mux.scala 98:16]
    data <= _data_T_23 @[lifegame_fram.scala 327:10]
    node _refreshCounter_T = add(refreshCounter, UInt<1>("h01")) @[lifegame_fram.scala 329:38]
    node _refreshCounter_T_1 = tail(_refreshCounter_T, 1) @[lifegame_fram.scala 329:38]
    refreshCounter <= _refreshCounter_T_1 @[lifegame_fram.scala 329:20]
    node _T_121 = lt(refreshCounter, UInt<15>("h0675b")) @[lifegame_fram.scala 330:26]
    when _T_121 : @[lifegame_fram.scala 330:79]
      skip @[lifegame_fram.scala 330:79]
    else : @[lifegame_fram.scala 331:86]
      node _T_122 = eq(refreshCounter, UInt<15>("h06869")) @[lifegame_fram.scala 331:33]
      when _T_122 : @[lifegame_fram.scala 331:86]
        rowEnable <= UInt<1>("h00") @[lifegame_fram.scala 332:17]
        node _rowReg_T = shl(rowReg, 1) @[lifegame_fram.scala 333:25]
        node _rowReg_T_1 = bits(rowReg, 7, 7) @[lifegame_fram.scala 333:39]
        node _rowReg_T_2 = or(_rowReg_T, _rowReg_T_1) @[lifegame_fram.scala 333:31]
        rowReg <= _rowReg_T_2 @[lifegame_fram.scala 333:14]
        skip @[lifegame_fram.scala 331:86]
      else : @[lifegame_fram.scala 334:61]
        node _T_123 = lt(refreshCounter, UInt<15>("h06977")) @[lifegame_fram.scala 334:33]
        when _T_123 : @[lifegame_fram.scala 334:61]
          rowEnable <= UInt<1>("h00") @[lifegame_fram.scala 335:17]
          skip @[lifegame_fram.scala 334:61]
        else : @[lifegame_fram.scala 336:63]
          node _T_124 = eq(refreshCounter, UInt<15>("h06977")) @[lifegame_fram.scala 336:33]
          when _T_124 : @[lifegame_fram.scala 336:63]
            refreshCounter <= UInt<1>("h00") @[lifegame_fram.scala 337:22]
            skip @[lifegame_fram.scala 336:63]
    
